{"version":3,"file":"index.mjs","sources":["../lib/ctors.js","../lib/main.js","../lib/type.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar CTORS = [\n\t[ TypeError, 'TypeError' ],\n\t[ SyntaxError, 'SyntaxError' ],\n\t[ ReferenceError, 'ReferenceError' ],\n\t[ RangeError, 'RangeError' ],\n\t[ URIError, 'URIError' ],\n\t[ EvalError, 'EvalError' ],\n\t[ Error, 'Error' ]\n];\n\n\n// EXPORTS //\n\nexport default CTORS;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport objectKeys from '@stdlib/utils-keys';\nimport copy from '@stdlib/utils-copy';\nimport isError from '@stdlib/assert-is-error';\nimport format from '@stdlib/error-tools-fmtprodmsg';\nimport typeName from './type.js';\n\n\n// MAIN //\n\n/**\n* Returns a JSON representation of an error object.\n*\n* @param {(Error|TypeError|SyntaxError|URIError|ReferenceError|RangeError|EvalError)} err - error to serialize\n* @throws {TypeError} must provide an error object\n* @returns {Object} JSON representation\n*\n* @example\n* var err = new Error( 'beep' );\n* var json = error2json( err );\n* // returns {...}\n*/\nfunction error2json( err ) {\n\tvar keys;\n\tvar out;\n\tvar i;\n\tif ( !isError( err ) ) {\n\t\tthrow new TypeError( format( '0Br41', err ) );\n\t}\n\tout = {};\n\n\t// Guaranteed properties:\n\tout.type = typeName( err );\n\tout.message = err.message;\n\n\t// Possible general error properties...\n\tif ( err.name ) {\n\t\tout.name = err.name;\n\t}\n\tif ( err.stack ) {\n\t\tout.stack = err.stack;\n\t}\n\t// Possible Node.js (system error) properties...\n\tif ( err.code ) {\n\t\tout.code = err.code;\n\t}\n\tif ( err.errno ) {\n\t\tout.errno = err.errno;\n\t}\n\tif ( err.syscall ) {\n\t\tout.syscall = err.syscall;\n\t}\n\t// Any enumerable properties...\n\tkeys = objectKeys( err );\n\tfor ( i = 0; i < keys.length; i++ ) {\n\t\tout[ keys[i] ] = copy( err[ keys[i] ] );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default error2json;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport instanceOf from '@stdlib/assert-instance-of';\nimport ctorName from '@stdlib/utils-constructor-name';\nimport getPrototypeOf from '@stdlib/utils-get-prototype-of';\nimport CTORS from './ctors.js';\n\n\n// MAIN //\n\n/**\n* Returns the error type.\n*\n* @private\n* @param {(Error|TypeError|SyntaxError|URIError|ReferenceError|RangeError|EvalError)} error - input error\n* @returns {(string|void)} error type\n*\n* @example\n* var err = new TypeError();\n* var out = typeName( err );\n* // returns 'TypeError'\n*/\nfunction typeName( error ) {\n\tvar v;\n\tvar i;\n\n\t// Check for error objects from the same realm (same Node.js `vm` or same `Window` object)...\n\tfor ( i = 0; i < CTORS.length; i++ ) {\n\t\tif ( instanceOf( error, CTORS[ i ][ 0 ] ) ) {\n\t\t\treturn CTORS[ i ][ 1 ];\n\t\t}\n\t}\n\t// Walk the prototype tree until we find an object having a desired native class...\n\twhile ( error ) {\n\t\tv = ctorName( error );\n\t\tfor ( i = 0; i < CTORS.length; i++ ) {\n\t\t\tif ( v === CTORS[ i ][ 1 ] ) {\n\t\t\t\treturn CTORS[ i ][ 1 ];\n\t\t\t}\n\t\t}\n\t\terror = getPrototypeOf( error );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default typeName;\n"],"names":["CTORS","TypeError","SyntaxError","ReferenceError","RangeError","URIError","EvalError","Error","error2json","err","keys","out","i","isError","format","type","error","v","length","instanceOf","ctorName","getPrototypeOf","typeName","message","name","stack","code","errno","syscall","objectKeys","copy"],"mappings":";;0lBAsBA,IAAIA,EAAQ,CACX,CAAEC,UAAW,aACb,CAAEC,YAAa,eACf,CAAEC,eAAgB,kBAClB,CAAEC,WAAY,cACd,CAAEC,SAAU,YACZ,CAAEC,UAAW,aACb,CAAEC,MAAO,UCcV,SAASC,EAAYC,GACpB,IAAIC,EACAC,EACAC,EACJ,IAAMC,EAASJ,GACd,MAAM,IAAIR,UAAWa,EAAQ,QAASL,IA2BvC,KAzBAE,EAAM,CAAA,GAGFI,KCXL,SAAmBC,GAClB,IAAIC,EACAL,EAGJ,IAAMA,EAAI,EAAGA,EAAIZ,EAAMkB,OAAQN,IAC9B,GAAKO,EAAYH,EAAOhB,EAAOY,GAAK,IACnC,OAAOZ,EAAOY,GAAK,GAIrB,KAAQI,GAAQ,CAEf,IADAC,EAAIG,EAAUJ,GACRJ,EAAI,EAAGA,EAAIZ,EAAMkB,OAAQN,IAC9B,GAAKK,IAAMjB,EAAOY,GAAK,GACtB,OAAOZ,EAAOY,GAAK,GAGrBI,EAAQK,EAAgBL,EACxB,CACF,CDTYM,CAAUb,GACrBE,EAAIY,QAAUd,EAAIc,QAGbd,EAAIe,OACRb,EAAIa,KAAOf,EAAIe,MAEXf,EAAIgB,QACRd,EAAIc,MAAQhB,EAAIgB,OAGZhB,EAAIiB,OACRf,EAAIe,KAAOjB,EAAIiB,MAEXjB,EAAIkB,QACRhB,EAAIgB,MAAQlB,EAAIkB,OAEZlB,EAAImB,UACRjB,EAAIiB,QAAUnB,EAAImB,SAGnBlB,EAAOmB,EAAYpB,GACbG,EAAI,EAAGA,EAAIF,EAAKQ,OAAQN,IAC7BD,EAAKD,EAAKE,IAAOkB,EAAMrB,EAAKC,EAAKE,KAElC,OAAOD,CACR"}