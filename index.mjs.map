{"version":3,"file":"index.mjs","sources":["../lib/ctors.js","../lib/type.js","../lib/main.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar CTORS = [\n\t[ TypeError, 'TypeError' ],\n\t[ SyntaxError, 'SyntaxError' ],\n\t[ ReferenceError, 'ReferenceError' ],\n\t[ RangeError, 'RangeError' ],\n\t[ URIError, 'URIError' ],\n\t[ EvalError, 'EvalError' ],\n\t[ Error, 'Error' ]\n];\n\n\n// EXPORTS //\n\nmodule.exports = CTORS;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar instanceOf = require( '@stdlib/assert-instance-of' );\nvar ctorName = require( '@stdlib/utils-constructor-name' );\nvar getPrototypeOf = require( '@stdlib/utils-get-prototype-of' );\nvar CTORS = require( './ctors.js' );\n\n\n// MAIN //\n\n/**\n* Returns the error type.\n*\n* @private\n* @param {(Error|TypeError|SyntaxError|URIError|ReferenceError|RangeError|EvalError)} error - input error\n* @returns {(string|void)} error type\n*\n* @example\n* var err = new TypeError();\n* var out = typeName( err );\n* // returns 'TypeError'\n*/\nfunction typeName( error ) {\n\tvar v;\n\tvar i;\n\n\t// Check for error objects from the same realm (same Node.js `vm` or same `Window` object)...\n\tfor ( i = 0; i < CTORS.length; i++ ) {\n\t\tif ( instanceOf( error, CTORS[ i ][ 0 ] ) ) {\n\t\t\treturn CTORS[ i ][ 1 ];\n\t\t}\n\t}\n\t// Walk the prototype tree until we find an object having a desired native class...\n\twhile ( error ) {\n\t\tv = ctorName( error );\n\t\tfor ( i = 0; i < CTORS.length; i++ ) {\n\t\t\tif ( v === CTORS[ i ][ 1 ] ) {\n\t\t\t\treturn CTORS[ i ][ 1 ];\n\t\t\t}\n\t\t}\n\t\terror = getPrototypeOf( error );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = typeName;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar objectKeys = require( '@stdlib/utils-keys' );\nvar copy = require( '@stdlib/utils-copy' );\nvar isError = require( '@stdlib/assert-is-error' );\nvar format = require( '@stdlib/string-format' );\nvar typeName = require( './type.js' );\n\n\n// MAIN //\n\n/**\n* Returns a JSON representation of an error object.\n*\n* @param {(Error|TypeError|SyntaxError|URIError|ReferenceError|RangeError|EvalError)} err - error to serialize\n* @throws {TypeError} first argument must be an error object\n* @returns {Object} JSON representation\n*\n* @example\n* var err = new Error( 'beep' );\n* var json = toJSON( err );\n* // returns {...}\n*/\nfunction toJSON( err ) {\n\tvar keys;\n\tvar out;\n\tvar i;\n\tif ( !isError( err ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an error object. Value: `%s`.', err ) );\n\t}\n\tout = {};\n\n\t// Guaranteed properties:\n\tout.type = typeName( err );\n\tout.message = err.message;\n\n\t// Possible general error properties...\n\tif ( err.name ) {\n\t\tout.name = err.name;\n\t}\n\tif ( err.stack ) {\n\t\tout.stack = err.stack;\n\t}\n\t// Possible Node.js (system error) properties...\n\tif ( err.code ) {\n\t\tout.code = err.code;\n\t}\n\tif ( err.errno ) {\n\t\tout.errno = err.errno;\n\t}\n\tif ( err.syscall ) {\n\t\tout.syscall = err.syscall;\n\t}\n\t// Any enumerable properties...\n\tkeys = objectKeys( err );\n\tfor ( i = 0; i < keys.length; i++ ) {\n\t\tout[ keys[i] ] = copy( err[ keys[i] ] );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = toJSON;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a JSON representation of an error object.\n*\n* @module @stdlib/error-to-json\n*\n* @example\n* var toJSON = require( '@stdlib/error-to-json' );\n*\n* var err = new Error( 'beep' );\n* var json = toJSON( err );\n* // returns <Object>\n*/\n\n// MODULES //\n\nvar toJSON = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = toJSON;\n"],"names":["CTORS","TypeError","SyntaxError","ReferenceError","RangeError","URIError","EvalError","Error","instanceOf","require$$0","ctorName","require$$1","getPrototypeOf","require$$2","objectKeys","copy","isError","format","require$$3","typeName","error","v","i","length","lib","err","keys","out","type","message","name","stack","code","errno","syscall"],"mappings":";;0kBAsBA,IAAIA,EAAQ,CACX,CAAEC,UAAW,aACb,CAAEC,YAAa,eACf,CAAEC,eAAgB,kBAClB,CAAEC,WAAY,cACd,CAAEC,SAAU,YACZ,CAAEC,UAAW,aACb,CAAEC,MAAO,UCPNC,EAAaC,EACbC,EAAWC,EACXC,EAAiBC,EACjBb,EDUaA,ECgCjB,IC7CIc,EAAaL,EACbM,EAAOJ,EACPK,EAAUH,EACVI,EAASC,EACTC,EDgBJ,SAAmBC,GAClB,IAAIC,EACAC,EAGJ,IAAMA,EAAI,EAAGA,EAAItB,EAAMuB,OAAQD,IAC9B,GAAKd,EAAYY,EAAOpB,EAAOsB,GAAK,IACnC,OAAOtB,EAAOsB,GAAK,GAIrB,KAAQF,GAAQ,CAEf,IADAC,EAAIX,EAAUU,GACRE,EAAI,EAAGA,EAAItB,EAAMuB,OAAQD,IAC9B,GAAKD,IAAMrB,EAAOsB,GAAK,GACtB,OAAOtB,EAAOsB,GAAK,GAGrBF,EAAQR,EAAgBQ,KCwB1B,IC5CAI,EDGA,SAAiBC,GAChB,IAAIC,EACAC,EACAL,EACJ,IAAMN,EAASS,GACd,MAAM,IAAIxB,UAAWgB,EAAQ,+DAAgEQ,IA2B9F,KAzBAE,EAAM,IAGFC,KAAOT,EAAUM,GACrBE,EAAIE,QAAUJ,EAAII,QAGbJ,EAAIK,OACRH,EAAIG,KAAOL,EAAIK,MAEXL,EAAIM,QACRJ,EAAII,MAAQN,EAAIM,OAGZN,EAAIO,OACRL,EAAIK,KAAOP,EAAIO,MAEXP,EAAIQ,QACRN,EAAIM,MAAQR,EAAIQ,OAEZR,EAAIS,UACRP,EAAIO,QAAUT,EAAIS,SAGnBR,EAAOZ,EAAYW,GACbH,EAAI,EAAGA,EAAII,EAAKH,OAAQD,IAC7BK,EAAKD,EAAKJ,IAAOP,EAAMU,EAAKC,EAAKJ,KAElC,OAAOK"}