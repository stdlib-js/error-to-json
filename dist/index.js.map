{
  "version": 3,
  "sources": ["../lib/ctors.js", "../lib/type.js", "../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar CTORS = [\n\t[ TypeError, 'TypeError' ],\n\t[ SyntaxError, 'SyntaxError' ],\n\t[ ReferenceError, 'ReferenceError' ],\n\t[ RangeError, 'RangeError' ],\n\t[ URIError, 'URIError' ],\n\t[ EvalError, 'EvalError' ],\n\t[ Error, 'Error' ]\n];\n\n\n// EXPORTS //\n\nmodule.exports = CTORS;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar instanceOf = require( '@stdlib/assert-instance-of' );\nvar ctorName = require( '@stdlib/utils-constructor-name' );\nvar getPrototypeOf = require( '@stdlib/utils-get-prototype-of' );\nvar CTORS = require( './ctors.js' );\n\n\n// MAIN //\n\n/**\n* Returns the error type.\n*\n* @private\n* @param {(Error|TypeError|SyntaxError|URIError|ReferenceError|RangeError|EvalError)} error - input error\n* @returns {(string|void)} error type\n*\n* @example\n* var err = new TypeError();\n* var out = typeName( err );\n* // returns 'TypeError'\n*/\nfunction typeName( error ) {\n\tvar v;\n\tvar i;\n\n\t// Check for error objects from the same realm (same Node.js `vm` or same `Window` object)...\n\tfor ( i = 0; i < CTORS.length; i++ ) {\n\t\tif ( instanceOf( error, CTORS[ i ][ 0 ] ) ) {\n\t\t\treturn CTORS[ i ][ 1 ];\n\t\t}\n\t}\n\t// Walk the prototype tree until we find an object having a desired native class...\n\twhile ( error ) {\n\t\tv = ctorName( error );\n\t\tfor ( i = 0; i < CTORS.length; i++ ) {\n\t\t\tif ( v === CTORS[ i ][ 1 ] ) {\n\t\t\t\treturn CTORS[ i ][ 1 ];\n\t\t\t}\n\t\t}\n\t\terror = getPrototypeOf( error );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = typeName;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar objectKeys = require( '@stdlib/utils-keys' );\nvar copy = require( '@stdlib/utils-copy' );\nvar isError = require( '@stdlib/assert-is-error' );\nvar format = require( '@stdlib/string-format' );\nvar typeName = require( './type.js' );\n\n\n// MAIN //\n\n/**\n* Returns a JSON representation of an error object.\n*\n* @param {(Error|TypeError|SyntaxError|URIError|ReferenceError|RangeError|EvalError)} err - error to serialize\n* @throws {TypeError} must provide an error object\n* @returns {Object} JSON representation\n*\n* @example\n* var err = new Error( 'beep' );\n* var json = error2json( err );\n* // returns {...}\n*/\nfunction error2json( err ) {\n\tvar keys;\n\tvar out;\n\tvar i;\n\tif ( !isError( err ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an error object. Value: `%s`.', err ) );\n\t}\n\tout = {};\n\n\t// Guaranteed properties:\n\tout.type = typeName( err );\n\tout.message = err.message;\n\n\t// Possible general error properties...\n\tif ( err.name ) {\n\t\tout.name = err.name;\n\t}\n\tif ( err.stack ) {\n\t\tout.stack = err.stack;\n\t}\n\t// Possible Node.js (system error) properties...\n\tif ( err.code ) {\n\t\tout.code = err.code;\n\t}\n\tif ( err.errno ) {\n\t\tout.errno = err.errno;\n\t}\n\tif ( err.syscall ) {\n\t\tout.syscall = err.syscall;\n\t}\n\t// Any enumerable properties...\n\tkeys = objectKeys( err );\n\tfor ( i = 0; i < keys.length; i++ ) {\n\t\tout[ keys[i] ] = copy( err[ keys[i] ] );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = error2json;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a JSON representation of an error object.\n*\n* @module @stdlib/error-to-json\n*\n* @example\n* var error2json = require( '@stdlib/error-to-json' );\n*\n* var err = new Error( 'beep' );\n* var json = error2json( err );\n* // returns <Object>\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAQ,CACX,CAAE,UAAW,WAAY,EACzB,CAAE,YAAa,aAAc,EAC7B,CAAE,eAAgB,gBAAiB,EACnC,CAAE,WAAY,YAAa,EAC3B,CAAE,SAAU,UAAW,EACvB,CAAE,UAAW,WAAY,EACzB,CAAE,MAAO,OAAQ,CAClB,EAKAD,EAAO,QAAUC,ICnCjB,IAAAC,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAa,QAAS,4BAA6B,EACnDC,EAAW,QAAS,gCAAiC,EACrDC,EAAiB,QAAS,gCAAiC,EAC3DC,EAAQ,IAiBZ,SAASC,EAAUC,EAAQ,CAC1B,IAAIC,EACAC,EAGJ,IAAMA,EAAI,EAAGA,EAAIJ,EAAM,OAAQI,IAC9B,GAAKP,EAAYK,EAAOF,EAAOI,CAAE,EAAG,CAAE,CAAE,EACvC,OAAOJ,EAAOI,CAAE,EAAG,CAAE,EAIvB,KAAQF,GAAQ,CAEf,IADAC,EAAIL,EAAUI,CAAM,EACdE,EAAI,EAAGA,EAAIJ,EAAM,OAAQI,IAC9B,GAAKD,IAAMH,EAAOI,CAAE,EAAG,CAAE,EACxB,OAAOJ,EAAOI,CAAE,EAAG,CAAE,EAGvBF,EAAQH,EAAgBG,CAAM,CAC/B,CACD,CAKAN,EAAO,QAAUK,ICnEjB,IAAAI,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAa,QAAS,oBAAqB,EAC3CC,EAAO,QAAS,oBAAqB,EACrCC,EAAU,QAAS,yBAA0B,EAC7CC,EAAS,QAAS,uBAAwB,EAC1CC,EAAW,IAiBf,SAASC,EAAYC,EAAM,CAC1B,IAAIC,EACAC,EACAC,EACJ,GAAK,CAACP,EAASI,CAAI,EAClB,MAAM,IAAI,UAAWH,EAAQ,+DAAgEG,CAAI,CAAE,EA2BpG,IAzBAE,EAAM,CAAC,EAGPA,EAAI,KAAOJ,EAAUE,CAAI,EACzBE,EAAI,QAAUF,EAAI,QAGbA,EAAI,OACRE,EAAI,KAAOF,EAAI,MAEXA,EAAI,QACRE,EAAI,MAAQF,EAAI,OAGZA,EAAI,OACRE,EAAI,KAAOF,EAAI,MAEXA,EAAI,QACRE,EAAI,MAAQF,EAAI,OAEZA,EAAI,UACRE,EAAI,QAAUF,EAAI,SAGnBC,EAAOP,EAAYM,CAAI,EACjBG,EAAI,EAAGA,EAAIF,EAAK,OAAQE,IAC7BD,EAAKD,EAAKE,CAAC,CAAE,EAAIR,EAAMK,EAAKC,EAAKE,CAAC,CAAE,CAAE,EAEvC,OAAOD,CACR,CAKAT,EAAO,QAAUM,ICjDjB,IAAIK,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_ctors", "__commonJSMin", "exports", "module", "CTORS", "require_type", "__commonJSMin", "exports", "module", "instanceOf", "ctorName", "getPrototypeOf", "CTORS", "typeName", "error", "v", "i", "require_main", "__commonJSMin", "exports", "module", "objectKeys", "copy", "isError", "format", "typeName", "error2json", "err", "keys", "out", "i", "main"]
}
